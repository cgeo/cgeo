name: Unit tests

concurrency:
  group: ci-tests-${{ github.event.pull_request.head.label || github.ref }}
  cancel-in-progress: ${{ !((github.ref == 'refs/heads/master' || github.ref == 'refs/heads/release') && github.event_name == 'push') }}

on:
  push:
  pull_request_target:
    types: [labeled, opened, synchronize]
  workflow_dispatch:
    inputs:
      JDK_VERSION:
        description: The JDK version to use
        type: number
        default: 17

env:
  JDK_VERSION: ${{ inputs.JDK_VERSION || '17' }}

permissions:
  actions: write
  contents: write
  checks: write
  pull-requests: write

jobs:
  check-websites:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Check websites status
        uses: ./.github/actions/check-websites

  check-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Debug concurrency-group
        run: |
          # concurrency:
          #   group: ci-tests-${{ github.event.pull_request.head.label || github.ref }}
          #   cancel-in-progress: ${{ !((github.ref == 'refs/heads/master' || github.ref == 'refs/heads/release') && github.event_name == 'push') }}

      - name: Debug
        uses: raven-actions/debug@v1

      - name: Check secrets
        run: |
          if [ -z "${{ secrets.KEY_STORE }}" ]; then
            echo "::error::No secret defined or no access to secrets"
            exit 1
          fi
          echo "::notice::Secrets seems available"

      - name: Get User Permission
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}

      - name: Check User Permission
        if: steps.checkAccess.outputs.require-result == 'false' && !contains(github.event.pull_request.labels.*.name, 'ok-to-test') && github.actor != 'dependabot[bot]' && github.actor != 'github-actions[bot]'
        run: |
          echo "::error::${{ github.triggering_actor }} does not have permissions on this repo.\nCurrent permission level is ${{ steps.checkAccess.outputs.user-permission }}\nJob originally triggered by ${{ github.actor }}"
          exit 1

  build-and-check:
    runs-on: ubuntu-latest
    needs: check-secrets
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup cgeo preferences and keystore
        uses: ./.github/actions/cgeo-preferences
        with:
          KEY_STORE: ${{ secrets.KEY_STORE }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_ALIAS_PASSWORD: ${{ secrets.KEY_ALIAS_PASSWORD }}
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
          MAPS_API_KEY_MARKET: ${{ secrets.MAPS_API_KEY_MARKET }}
          MAPS_API2_KEY: ${{ secrets.MAPS_API2_KEY }}
          OCDE_OKAPI_CONSUMER_KEY: ${{ secrets.OCDE_OKAPI_CONSUMER_KEY }}
          OCDE_OKAPI_CONSUMER_SECRET: ${{ secrets.OCDE_OKAPI_CONSUMER_SECRET }}
          OCPL_OKAPI_CONSUMER_KEY: ${{ secrets.OCPL_OKAPI_CONSUMER_KEY }}
          OCPL_OKAPI_CONSUMER_SECRET: ${{ secrets.OCPL_OKAPI_CONSUMER_SECRET }}
          OCUS_OKAPI_CONSUMER_KEY: ${{ secrets.OCUS_OKAPI_CONSUMER_KEY }}
          OCUS_OKAPI_CONSUMER_SECRET: ${{ secrets.OCUS_OKAPI_CONSUMER_SECRET }}
          OCNL_OKAPI_CONSUMER_KEY: ${{ secrets.OCNL_OKAPI_CONSUMER_KEY }}
          OCNL_OKAPI_CONSUMER_SECRET: ${{ secrets.OCNL_OKAPI_CONSUMER_SECRET }}
          OCRO_OKAPI_CONSUMER_KEY: ${{ secrets.OCRO_OKAPI_CONSUMER_KEY }}
          OCRO_OKAPI_CONSUMER_SECRET: ${{ secrets.OCRO_OKAPI_CONSUMER_SECRET }}
          OCUK_OKAPI_CONSUMER_KEY: ${{ secrets.OCUK_OKAPI_CONSUMER_KEY }}
          OCUK_OKAPI_CONSUMER_SECRET: ${{ secrets.OCUK_OKAPI_CONSUMER_SECRET }}
          SU_CONSUMER_KEY: ${{ secrets.SU_CONSUMER_KEY }}
          SU_CONSUMER_SECRET: ${{ secrets.SU_CONSUMER_SECRET }}
          THUNDERFOREST_API_KEY: ${{ secrets.THUNDERFOREST_API_KEY }}
          ALC_CONSUMER_KEY: ${{ secrets.ALC_CONSUMER_KEY }}
          PREF_COOKIESTORE: ${{ secrets.PREF_COOKIESTORE }}
          PREF_USERNAME: ${{ secrets.PREF_USERNAME }}
          PREF_PASSWORD: ${{ secrets.PREF_PASSWORD }}

      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' && github.ref != 'refs/heads/release' }}
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          add-job-summary-as-pr-comment: on-failure  # Valid values are 'never' (default), 'always', and 'on-failure'

      - name: Build BasicDebug apk
        run: |
          # Build Basic Debug package to upload as GitHub Artifact
          ./gradlew assembleBasicDebug \
            --no-configuration-cache

      - name: Upload BasicDebug APK
        uses: actions/upload-artifact@v4
        with:
          name: "cgeo-debug-apk"
          path: './main/build/outputs/apk/basic/debug/cgeo-debug.apk'
          overwrite: true

      - name: Run lintBasicDebug
        run: |
          ./gradlew lintBasicDebug \
            --no-configuration-cache

      - name: Check and report lint results
        uses: hidakatsuya/action-report-android-lint@v1
        with:
          result-path: 'main/build/reports/lint-results-basicDebug.xml'
          fail-on-warning: false

      - name: Run checkstyle
        run: |
          ./gradlew checkstyle \
            --no-configuration-cache

      - uses: lcollins/checkstyle-github-action@v3.1.0
        with:
          path: 'main/build/reports/checkstyle/checkstyle.xml'

  integration-tests:
    # > It is now recommended to use the Ubuntu (ubuntu-latest) runners which
    # > are 2-3 times faster than the macOS ones which are also a lot more expensive.
    # https://github.com/ReactiveCircus/android-emulator-runner#running-hardware-accelerated-emulators-on-linux-runners
    runs-on: ubuntu-latest
    needs: check-secrets
    steps:
      - name: Checkout the latest code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' && github.ref != 'refs/heads/release' }}
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          add-job-summary-as-pr-comment: on-failure  # Valid values are 'never' (default), 'always', and 'on-failure'

      - name: Setup cgeo preferences and keystore
        uses: ./.github/actions/cgeo-preferences
        with:
          destination: main/src/main/assets/developer_preferences.xml
          KEY_STORE: ${{ secrets.KEY_STORE }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_ALIAS_PASSWORD: ${{ secrets.KEY_ALIAS_PASSWORD }}
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
          MAPS_API_KEY_MARKET: ${{ secrets.MAPS_API_KEY_MARKET }}
          MAPS_API2_KEY: ${{ secrets.MAPS_API2_KEY }}
          OCDE_OKAPI_CONSUMER_KEY: ${{ secrets.OCDE_OKAPI_CONSUMER_KEY }}
          OCDE_OKAPI_CONSUMER_SECRET: ${{ secrets.OCDE_OKAPI_CONSUMER_SECRET }}
          OCPL_OKAPI_CONSUMER_KEY: ${{ secrets.OCPL_OKAPI_CONSUMER_KEY }}
          OCPL_OKAPI_CONSUMER_SECRET: ${{ secrets.OCPL_OKAPI_CONSUMER_SECRET }}
          OCUS_OKAPI_CONSUMER_KEY: ${{ secrets.OCUS_OKAPI_CONSUMER_KEY }}
          OCUS_OKAPI_CONSUMER_SECRET: ${{ secrets.OCUS_OKAPI_CONSUMER_SECRET }}
          OCNL_OKAPI_CONSUMER_KEY: ${{ secrets.OCNL_OKAPI_CONSUMER_KEY }}
          OCNL_OKAPI_CONSUMER_SECRET: ${{ secrets.OCNL_OKAPI_CONSUMER_SECRET }}
          OCRO_OKAPI_CONSUMER_KEY: ${{ secrets.OCRO_OKAPI_CONSUMER_KEY }}
          OCRO_OKAPI_CONSUMER_SECRET: ${{ secrets.OCRO_OKAPI_CONSUMER_SECRET }}
          OCUK_OKAPI_CONSUMER_KEY: ${{ secrets.OCUK_OKAPI_CONSUMER_KEY }}
          OCUK_OKAPI_CONSUMER_SECRET: ${{ secrets.OCUK_OKAPI_CONSUMER_SECRET }}
          SU_CONSUMER_KEY: ${{ secrets.SU_CONSUMER_KEY }}
          SU_CONSUMER_SECRET: ${{ secrets.SU_CONSUMER_SECRET }}
          THUNDERFOREST_API_KEY: ${{ secrets.THUNDERFOREST_API_KEY }}
          ALC_CONSUMER_KEY: ${{ secrets.ALC_CONSUMER_KEY }}
          PREF_COOKIESTORE: ${{ secrets.PREF_COOKIESTORE }}
          PREF_USERNAME: ${{ secrets.PREF_USERNAME }}
          PREF_PASSWORD: ${{ secrets.PREF_PASSWORD }}

      - name: Build CustomprefsDebugUnitTest apk
        run: |
          ./gradlew assembleCustomprefsDebugUnitTest \
            --no-configuration-cache

      - name: Run Unit Tests
        run: |
          ./gradlew testCustomprefsDebugUnitTest

      - name: Build CustomprefsDebug apk
        run: |
          ./gradlew assembleCustomprefsDebug

      - name: Build CustomprefsAndroidDebug apk
        run: |
          ./gradlew assembleCustomprefsDebugAndroidTest \
            --no-configuration-cache \
            -Pandroid.testInstrumentationRunnerArguments.notAnnotation=cgeo.geocaching.test.NotForIntegrationTests

      - name: 'BrowserStack Env Setup'
        uses: 'browserstack/github-actions/setup-env@master'
        with:
          username:  ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}

      - name: 'BrowserStack install CLI'
        uses: './.github/actions/browserstack-install-cli'

      - name: 'BrowserStackLocal Setup'
        uses: 'browserstack/github-actions/setup-local@master'
        with:
          local-testing: start
          local-identifier: random

      - name: Run Integration Tests
        run: |
          browserstack \
            app-automate \
              espresso \
              run \
              --app ./main/build/outputs/apk/customprefs/debug/cgeo-customprefs-debug.apk \
              --testSuite ./main/build/outputs/apk/androidTest/customprefs/debug/cgeo-customprefs-debug-androidTest.apk \
              --devices "Google Pixel 7-13.0" \
              --project "c:geo" \
              --deviceLogs=true \
              --networkLogs=false \
              --video=false \
              --gpsLocation "52.518621, 13.404659" \
              --singleRunnerInvocation=true \
              --localIdentifier=fooglobal \
              --disableAnimations=true

      - name: 'BrowserStackLocal Setup'
        uses: 'browserstack/github-actions/setup-local@master'
        with:
          local-testing: stop

      - name: Fetch BrowserStack Report
        uses: 'browserstack/github-actions/browserstack-report-action@master'
        with:
          username: ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}



  # rerun-on-failure:
  #   needs: integration-tests
  #   if: failure() && fromJSON(github.run_attempt) < 3
  #   runs-on: ubuntu-latest
  #   steps:
  #     - env:
  #         GH_REPO: ${{ github.repository }}
  #         GH_TOKEN: ${{ github.token }}
  #         GH_DEBUG: api
  #       run: gh workflow run unit-tests-rerun.yml -F run_id=${{ github.run_id }}
